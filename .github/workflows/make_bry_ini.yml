name: make the croco bry and ini files
# make the boundary forcing for a particular domain          
# we don't need to make surface forcing since we're using the ONLINE cpp key
# (the blk files are already reformatted in download_surface.yml)
on:
  workflow_call:
    inputs:
      RUN_DATE:
        description: 'time of T0 of the model run in format YYYYMMDD_HH - defined dynamically in run_ops.yml'
        required: true
        type: string
      BRANCH_REF:
        description: 'what branch are we on - defined dynamically in run_ops.yml'
        required: true
        type: string
      RUNNER_NAME:
        description: 'specify the runner name to determine what server we are running on'
        required: true
        type: string
      MODEL:
        description: 'directory name used to define the model e.g.croco_v1.3.1'
        required: true
        type: string
      DOMAIN:
        description: 'directory name used to define the domain e.g. sa_west_02' 
        required: true
        type: string
      OGCM:
        description: 'name of boundary forcing e.g. MERCATOR' 
        required: true
        type: string
      HDAYS:
        description: 'number of hindcast days (integer) from T0'
        required: true
        type: string
      FDAYS:
        description: 'number of forecast days (integer) from T0'
        required: true
        type: string

env:
  # define the directory names for this configuration
  BRANCH_DIR: /home/somisana/ops/${{ inputs.BRANCH_REF }}
  DATE_DIR: /home/somisana/ops/${{ inputs.BRANCH_REF }}/${{ inputs.RUN_DATE }}
  CONFIG_DIR: /home/somisana/ops/${{ inputs.BRANCH_REF }}/${{ inputs.RUN_DATE }}/${{ inputs.DOMAIN }}/${{ inputs.MODEL }}
  INPUT_DIR: /home/somisana/ops/${{ inputs.BRANCH_REF }}/${{ inputs.RUN_DATE }}/downloaded_data/${{ inputs.OGCM }}

jobs:
  make_ogcm:
    runs-on: ${{ inputs.RUNNER_NAME }}
    steps:
      - name: Format RUN_DATE
        id: format_date
        run: |
          run_date=${{ inputs.RUN_DATE }} 
          run_date_formatted="'${run_date:0:4}-${run_date:4:2}-${run_date:6:2} ${run_date:9:2}:00:00'" 
          echo "value=$run_date_formatted" >> $GITHUB_OUTPUT 
        
      - name: generate the initial file
        id: make_ini_ogcm_file
        run: |
          docker run \
            --rm \
            -v ${{ env.INPUT_DIR }}:/mnt/tmp/input_dir \
            -v ${{ env.CONFIG_DIR }}:/mnt/tmp/config_dir \
            ghcr.io/saeon/somisana-croco_cli_${{ inputs.BRANCH_REF }}:latest \
            make_ini_fcst \
              --input_file /mnt/tmp/input_dir/${{ inputs.OGCM }}_${{ inputs.RUN_DATE }}.nc \
              --output_dir /mnt/tmp/config_dir/${{ inputs.OGCM }}/ \
              --run_date ${{ steps.format_date.outputs.value }} \
              --hdays ${{ inputs.HDAYS }} \
              --Yorig 2000

      - name: generate the OGCM forcing file (and ini file which will only be used if a suitable restart file isn't available)
        id: make_ogcm_file
        run: |
          docker run \
            --rm \
            -v ${{ env.INPUT_DIR }}:/mnt/tmp/input_dir \
            -v ${{ env.CONFIG_DIR }}:/mnt/tmp/config_dir \
            ghcr.io/saeon/somisana-croco_cli_${{ inputs.BRANCH_REF }}:latest \
            make_bry_fcst \
              --input_file /mnt/tmp/input_dir/${{ inputs.OGCM }}_${{ inputs.RUN_DATE }}.nc \
              --output_dir /mnt/tmp/config_dir/${{ inputs.OGCM }}/ \
              --run_date ${{ steps.format_date.outputs.value }} \
              --hdays ${{ inputs.HDAYS }} \
              --fdays ${{ inputs.FDAYS }} \
              --Yorig 2000

      - name: cleanup 
        # cleanup.yml is struggling to clean up the __pycache__ dir left by running the above steps 
        # so we'll just get rid of it here
        id: cleanup
        run: |
          sudo rm -rf ${{ env.CONFIG_DIR }}/${{ inputs.OGCM }}/__pycache__

