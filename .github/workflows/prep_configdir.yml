name: prepare croco config directory
# I originally had this step as part of run_croco.yml, but we need this step first where we copy the relevant configuration data locally for the run. That way different forcing files and models can be run in parallel using the 'matrix strategy' on run_croco.yml

on:
  workflow_call:
    inputs:
      RUN_DATE:
        description: 'time of T0 of the model run in format YYYYMMDD_HH - defined dynamically in run_ops.yml'
        required: true
        type: string
      BRANCH_REF:
        description: 'what branch are we on - defined dynamically in run_ops.yml'
        required: true
        type: string
      RUNNER_NAME:
        description: 'specify the runner name to determine what server we are running on'
        required: true
        type: string
      MODEL:
        description: 'directory name used to define the model e.g.croco_v1.3.1'
        required: true
        type: string
      DOMAIN:
        description: 'directory name used to define the domain e.g. sa_west_02' 
        required: true
        type: string

env:
  CONFIG_DIR: /home/somisana/ops/${{ inputs.BRANCH_REF }}/${{ inputs.RUN_DATE }}/${{ inputs.DOMAIN }}/${{ inputs.MODEL }}

jobs:
  cleanup:
    steps:
      - name: Clean /home/somisana/ops/${{ inputs.BRANCH_REF }}
        # remove all directories older than 5 days on the the server where the model is run 
        # anything not archived will be lost!
        id: cleanup_runner
        run: |
          find /home/somisana/ops/${{ inputs.BRANCH_REF }}/* -maxdepth 0 -type d -ctime +5 -exec rm -rf {} \;
      - name: Clean /mnt/saeon-somisana/data/
        # clean certain file types in the public facing archive
        # we only want to keep the forecast portion of the archived forecast runs
        # (the various tiered outputs can be regenerated if needed) 
        id: cleanup_archive
        run: |
          # have to run as sudo as the archive is owned by root
          sudo find /mnt/saeon-somisana/data/ -type f,d \( -name "*t1*" -o -name "*t2*" -o -name "*t3*" -o -name "*_avg.nc*" \) -ctime +5 -exec rm -fr {} +
  setup-config-dir:
    runs-on: ${{ inputs.RUNNER_NAME }}
    continue-on-error: true
    steps:
      - name: create the directory
        run: |
          rm -rf ${{ env.CONFIG_DIR }}  
          mkdir -p ${{ env.CONFIG_DIR }}
      
# commenting this to rather checkout the code and copy directly... which is probably a more elegant way of doing it
#      - name: copy configuration files from the `run` docker image
#        run: >-
#          docker run \
#            --rm \
#            --entrypoint /bin/bash \
#            -v ${{ env.CONFIG_DIR }}:/tmp \
#            ghcr.io/saeon/somisana-croco_run_main:latest \
#            -c "cp -r /somisana-croco/configs/${{ inputs.DOMAIN }}/${{ inputs.MODEL }}/* /tmp/"

      - name: Check out source code so have access to the files in the repo
        uses: actions/checkout@main
        with:
          ref: ${{ inputs.BRANCH_REF }}    

      - name: copy configuration files to the server running the model
        run: |
          # this only works because we've checked out the source code in the step above
          cp -r configs/${{ inputs.DOMAIN }}/${{ inputs.MODEL }}/* ${{ env.CONFIG_DIR }}

      - name: add permissions to the directories we just copied in
        run: |
          chown -R :runners ${{ env.CONFIG_DIR }}
          chmod -R 775 ${{ env.CONFIG_DIR }}


