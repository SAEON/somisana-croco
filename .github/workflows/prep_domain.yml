name: prepare croco config directory
# this runs jobs needed before running croco under different combinations of different forcings
# I originally had this step as part of run_croco.yml, but we first need to copy the relevant configuration data locally for the run. That way different forcing files and models can be run in parallel
# we're also compiling croco here, as we only need to do it once per domain (in fact you HAVE to do it here and not in run_croco.yml, otherwise the same code gets compiled in parallel and in the same place, leading to crashes)

on:
  workflow_call:
    inputs:
      RUN_DATE:
        description: 'time of T0 of the model run in format YYYYMMDD_HH - defined dynamically in run_ops.yml'
        required: true
        type: string
      BRANCH_REF:
        description: 'what branch are we on - defined dynamically in run_ops.yml'
        required: true
        type: string
      RUNNER_NAME:
        description: 'specify the runner name to determine what server we are running on'
        required: true
        type: string
      MODEL:
        description: 'directory name used to define the model e.g.croco_v1.3.1'
        required: true
        type: string
      DOMAIN:
        description: 'directory name used to define the domain e.g. sa_west_02' 
        required: true
        type: string
      COMP:
        description: 'directory corresponding to the CROCO compilation options e.g. C01' 
        required: true
        type: string

env:
  CONFIG_DIR: /home/somisana/ops/${{ inputs.BRANCH_REF }}/${{ inputs.RUN_DATE }}/${{ inputs.DOMAIN }}/${{ inputs.MODEL }}

jobs:
  setup-config-dir:
    runs-on: ${{ inputs.RUNNER_NAME }}
    continue-on-error: true
    steps:
      - name: create the directory
        run: |
          sudo rm -rf ${{ env.CONFIG_DIR }}  
          mkdir -p ${{ env.CONFIG_DIR }}

      - name: Check out source code so have access to the files in the repo
        uses: actions/checkout@main
        with:
          ref: ${{ inputs.BRANCH_REF }}    

      - name: copy configuration files to the server running the model
        run: |
          # this only works because we've checked out the source code in the step above
          cp -r configs/${{ inputs.DOMAIN }}/${{ inputs.MODEL }}/* ${{ env.CONFIG_DIR }}

      - name: add permissions to the directories we just copied in
        run: |
          chown -R :runners ${{ env.CONFIG_DIR }}
          chmod -R 775 ${{ env.CONFIG_DIR }}

  compile_croco:
    needs: [setup-config-dir]
    runs-on: ${{ inputs.RUNNER_NAME }}
    steps:
      - name: compile the code
        run: |
          docker run \
            --sudo rm \
            --entrypoint /bin/bash \
            -v ${{ env.CONFIG_DIR }}:/home/somisana \
            ghcr.io/saeon/somisana-croco_run_${{ inputs.BRANCH_REF }}:latest \
              -c "cd /home/somisana && ./jobcomp_frcst.sh ${{ inputs.COMP }}"

